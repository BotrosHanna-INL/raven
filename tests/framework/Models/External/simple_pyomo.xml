<?xml version="1.0" ?>
<Simulation>
  <TestInfo>
    <name>framework.Models.External.serialize_pyomo</name>
    <author>cogljj</author>
    <created>2021-08-18</created>
    <classesTested>Models.ROM</classesTested>
    <description>
      This test serializes a ROM to use with PYOMO.
      It can be used with:
      cd tests/framework/Models/External
      python3 SerializePyomo/simple_out.py -r SerializePyomo/simple_pickle.pk -f ../../../..
    </description>
    <analytic>
      This test uses the example from Pyomo's manual for concrete and abstract models.
      The following conditions are used to determine the minimum value of:
      \begin{equation}
        2*x_{1}+3*x_{2}
      \end{equation}
      The conditions are the following:
      \begin{equation}
        3*x_{1}+4*x_{2}\geq 1,\qquad x_{1}\geq 0,\qquad x_{2}\geq 0
      \end{equation}
      The GNU Linear Programming Kit (glpk) option is used in Pyomo to solve the problem.
      The results are the following:
      \begin{itemize}
        \item Lower bound: 0.6666666666666667
        \item Upper bound: 0.6666666666666667
        \item Number of objectives: 1
        \item Number of constraints: 2
        \item Number of variables: 3
        \item of nonzeros: 3
        \item Sense: minimize
        \item number of solutions: 1
        \item Status: feasible
        \item $x_{1}$ value: 0.333333333333333
        \item $x_{2}$ value: 0.000000000000000
        \item $2*x_{1}+3*x_{2}$ value: 0.666666666666666
      \end{itemize}
    </analytic>
  </TestInfo>

  <RunInfo>
    <WorkingDir>SerializePyomo</WorkingDir>
    <Sequence>sample, train, serialize, pickle</Sequence>
  </RunInfo>

  <Files>
    <Input name="simple_out.py" type="">simple_out.py</Input>
    <Input name="simple_pickle.pk" type="">simple_pickle.pk</Input>
  </Files>

  <Steps>
    <MultiRun name="sample">
      <Input class="DataObjects" type="PointSet">dummyIN</Input>
      <Model class="Models" type="ExternalModel">simple</Model>
      <Sampler class="Samplers" type="Grid">grid</Sampler>
      <Output class="DataObjects" type="PointSet">samples</Output>
    </MultiRun>
    <RomTrainer name="train">
      <Input class="DataObjects" type="PointSet">samples</Input>
      <Output class="Models" type="ROM">simple_rom</Output>
    </RomTrainer>
    <IOStep name="serialize">
      <Input class="Models" type="ROM">simple_rom</Input>
      <Output class="Files" type="">simple_out.py</Output>
    </IOStep>
    <IOStep name="pickle">
      <Input class="Models" type="ROM">simple_rom</Input>
      <Output class="Files" type="">simple_pickle.pk</Output>
    </IOStep>
  </Steps>

  <Models>
    <ExternalModel ModuleToLoad="../AllMethods/simple" name="simple" subType="">
      <inputs>x1,x2,a1,a2,b,c1,c2</inputs>
      <outputs>ans</outputs>
    </ExternalModel>
    <ROM name="simple_rom" subType="SciKitLearn">
      <SKLtype>linear_model|LinearRegression</SKLtype>
      <Features>x1,x2</Features>
      <Target>ans</Target>
    </ROM>
  </Models>

  <Distributions>
    <Uniform name="dist">
      <lowerBound>0</lowerBound>
      <upperBound>1</upperBound>
    </Uniform>
  </Distributions>

  <Samplers>
    <Grid name="grid">
      <variable name="x1">
        <distribution>dist</distribution>
        <grid type='CDF' construction='equal' steps='1'>0 1</grid>
      </variable>
      <variable name="x2">
        <distribution>dist</distribution>
        <grid type='CDF' construction='equal' steps='1'>0 1</grid>
      </variable>
      <constant name="a1">3.0</constant>
      <constant name="a2">4.0</constant>
      <constant name="b">1.0</constant>
      <constant name="c1">2.0</constant>
      <constant name="c2">3.0</constant>
    </Grid>
  </Samplers>

  <DataObjects>
    <PointSet name="dummyIN">
      <Input>x1,x2</Input>
    </PointSet>
    <PointSet name="samples">
      <Input>x1, x2</Input>
      <Output>ans</Output>
    </PointSet>
  </DataObjects>


</Simulation>
